from setuptools import setup
import setuptools, os

descr = 'Image process framework based on plugin like imagej, it is esay to glue with scipy.ndimage, scikit-image, opencv, simpleitk, mayavi...and any libraries based on numpy'

def get_data_files():
    dic = {}
    for root, dirs, files in os.walk('imagepy', True):
        root = root.replace('/', '.').replace('\\', '.')
        files = [i for i in files if not '.py' in i]
        if len(files)==0:continue
        dic[root] = files
    return dic
get_data_files()

if __name__ == '__main__':
    setup(name='imagepy',
        version='0.22',
        url='https://github.com/Image-Py/imagepy',
        description='interactive python image-processing plugin framework',
        long_description=descr,
        author='YXDragon',
        author_email='yxdragon@imagepy.org',
        license='BSD 3-clause',
        packages=setuptools.find_packages(),
        entry_points={
        'console_scripts': [
            'imagepy = imagepy:show',
        ],
    },
        package_data={'imagepy.data': ['config.json',
            'logo.ico',
            'logolong.png',
            'shotcut.cfg',
            'watermark.png'],
            'imagepy.data.luts': ['16_Colors.lut',
            '6_Shades.lut',
            'BRGBCMYW.lut',
            'Blue.lut',
            'Cyan.lut',
            'Cyan_Hot.lut',
            'Grays.lut',
            'Green.lut',
            'Green_Fire_Blue.lut',
            'HiLo.lut',
            'ICA.lut',
            'ICA2.lut',
            'ICA3.lut',
            'Jet.lut',
            'Magenta.lut',
            'Magenta_Hot.lut',
            'Orange_Hot.lut',
            'Pink.lut',
            'README.txt',
            'Red.lut',
            'Red_Hot.lut',
            'Yellow.lut',
            'Yellow_Hot.lut',
            'gem.lut'],
            'imagepy.data.luts.Others': ['5_ramps.lut',
            'Errors.lut',
            'FRC.lut',
            'Glow.lut',
            'Rainbow_RGB.lut',
            'Thermal.lut',
            'Viridis.lut',
            'ametrine.lut',
            'blue_orange_icb.lut',
            'cool.lut',
            'edges.lut',
            'glasbey.lut',
            'glasbey_inverted.lut',
            'glasbey_on_dark.lut',
            'isolum.lut',
            'morgenstemning.lut',
            'mpl-inferno.lut',
            'mpl-magma.lut',
            'mpl-plasma.lut',
            'mpl-viridis.lut',
            'phase.lut',
            'physics.lut',
            'royal.lut',
            'sepia.lut',
            'smart.lut',
            'thal.lut',
            'thallium.lut',
            'unionjack.lut'],
            'imagepy.menus.File.Samples Online': ['Author.mc',
            'DEM.mc',
            'Lena.mc',
            'Logo.mc',
            'Two Boxes.mc'],
            'imagepy.menus.Kit3D.Viewer 3D': ['2DSurface Demo.mc'],
            'imagepy.menus.Plugins.Contribute': ['Contribute Document.md',
            'Contribute Plugin.md'],
            'imagepy.menus.Plugins.Contribute.Contributions': ['CellPose.md',
            'Demo Repo.md',
            'FluidSurface.md',
            'IBook.md',
            'OpenCV.md',
            'Sea Ice.md',
            'SimpleITK.md'],
            'imagepy.menus.Plugins.Macros.icons': ['copy.png',
            'cut.png',
            'delete.png',
            'open.png',
            'paste.png',
            'pause.png',
            'play.png',
            'record.png',
            'runlines.png',
            'save.png'],
            'imagepy.menus.Plugins.StackReg': ['StackReg License.md'],
            'imagepy.menus.Process.Classify.imgs': ['01.gif',
            '03.gif',
            '05.gif',
            '10.gif',
            'fill.gif'],
            'imagepy.tools': ['drop.gif'],
            'imagepy.tools.Draw': ['Route.gif',
            'aibrush.gif',
            'flood3d.gif',
            'floodfill.gif'],
            'imagepy.tools.Measure': ['angle.gif',
            'angle2.gif',
            'area.gif',
            'coordinate.gif',
            'distance.gif',
            'profile.gif',
            'setting.gif'],
            'imagepy.tools.Network': ['Build Graph.gif',
            'Build Graph.mc',
            'Cut Branch.gif',
            'Cut Branch.mc',
            'Cut By ROI.gif',
            'Cut By ROI.mc',
            'Graph Statistic.gif',
            'Graph Statistic.mc',
            'Graph Summarise.gif',
            'Graph Summarise.mc',
            'graphcut.gif',
            'graphpen.gif'],
            'imagepy.tools.Stack': ['Add Slice.gif',
            'Add Slice.mc',
            'Delete Slice.gif',
            'Delete Slice.mc',
            'Next Slice.gif',
            'Next Slice.mc',
            'Orthogonal View.gif',
            'Orthogonal View.mc',
            'Previous Slice.gif',
            'Previous Slice.mc',
            'Set Slice.gif',
            'Set Slice.mc'],
            'imagepy.tools.Standard': ['colorpicker.gif',
            'freearea.gif',
            'freeline.gif',
            'line.gif',
            'magic.gif',
            'move.gif',
            'oval.gif',
            'painter.gif',
            'point.gif',
            'polygon.gif',
            'rectangle.gif',
            'scale.gif'],
            'imagepy.tools.Toolkit3D': ['Build Graph3D.gif',
            'Build Graph3D.mc',
            'Cut Branch 3D.gif',
            'Cut Branch 3D.mc',
            'Show Graph3D.gif',
            'Show Graph3D.mc',
            'Surface3D.gif',
            'Surface3D.mc',
            'cursor3d.gif',
            'flood3d.gif'],
            'imagepy.tools.Transform': ['rotate.gif', 'scale.gif']},
        install_requires=[
            'scikit-image',
            'scikit-learn',
            'shapely',
            'pypubsub',
            'wxpython',
            'read_roi',
            'numpy-stl',
            'pydicom',
            'pystackreg',
            'pandas',
            'xlrd',
            'xlwt',
            'openpyxl',
            'markdown',
            'python-markdown-math',
            'numba'
        ],
    )